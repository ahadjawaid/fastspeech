# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/02_loading.ipynb.

# %% auto 0
__all__ = ['get_audio_files', 'load_audio', 'melspectrogram', 'replace_extension', 'load_tiers', 'get_phones_and_durations']

# %% ../nbs/02_loading.ipynb 3
from fastai.data.transforms import FileGetter
from pathlib import Path
import tgt
import librosa
from torch import tensor

# %% ../nbs/02_loading.ipynb 7
def get_audio_files(dir_path: str): # Path of directory containing ```.wav``` files
    return FileGetter(extensions='.wav')(Path(dir_path))

# %% ../nbs/02_loading.ipynb 9
def load_audio(file_path: str, # Path to a file with ```.wav``` extension
               sr: int): # Sampling rate
    wav, _ = librosa.load(file_path, sr=sr)
    return wav

# %% ../nbs/02_loading.ipynb 11
def melspectrogram(inp: tensor, 
                   n_fft:int=1024, # Length of the windowed signal
                   hl:int=256, # The hop length
                   nb:int=80): # Number of mel bins
    return librosa.feature.melspectrogram(y=inp, n_fft=n_fft, hop_length=hl, 
                                          n_mels=nb)

# %% ../nbs/02_loading.ipynb 14
def replace_extension(path: str, # File path
                      extension: str): # New extension
    return Path(path).with_suffix(extension)

# %% ../nbs/02_loading.ipynb 16
def load_tiers(file_path: str): # Path to a ```.TextGrid``` file
    return tgt.io.read_textgrid(file_path).get_tier_by_name("phones")

# %% ../nbs/02_loading.ipynb 18
def get_phones_and_durations(tgt_path: str, # Path to a ```.TextGrid``` file
                             sr: int, # Waveform sampling rate
                             hl: int): # Spectrogram hop length
    tiers = load_tiers(tgt_path)
    phones, durations = zip(*map(lambda x: (x.text, x.duration()*sr / hl), tiers))
    return phones, durations
